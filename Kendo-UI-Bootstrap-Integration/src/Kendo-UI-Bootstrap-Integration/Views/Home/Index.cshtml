@*@model IEnumerable<Kendo_UI_Bootstrap_Integration.Models.ChartViewModel>*@

<div id="example" class="container">
    <section class="card">
        <div class="card-header">What is this page?</div>

        <div class="card-body">
              <p>This page shows how to use Telerik UI for ASP.NET Core alongside Twitter Bootstrap.</p>

              <p>The grid layout and responsive CSS is provided by Bootstrap, and components are provided by Telerik UI for ASP.NET Core.</p>

              <p>Resize the page or customize it using the pickers above to see its responsive features.</p>

              <p>The source for this demo is <a href="https://github.com/telerik/core-bootstrap-demo">available on GitHub</a></p>
        </div>
    </section>

    @(Html.Kendo().Menu()
        .Name("menu")
        .Items(children =>
            {
                children.Add().Text("Profile").Url("#profile");
                children.Add().Text("Schedule").Url("#schedule");
                children.Add().Text("Orders").Url("#orders");
                children.Add().Text("Gallery").Url("#gallery");
                children.Add().Text("FAQ").Url("#faq");
                children.Add().Text("Telerik UI for ASP.NET Core demos").Url("https://demos.telerik.com/aspnet-core/");
            }
        )
    )

    <div class="row clearfix">
        <div class="col-lg-4">
            <section id="profile" class="card ra-section">
                <div class="card-header">Profile</div>

                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-4 col-md-3">
                            <img src="@Url.Content("~/assets/avatar.jpg")" class="avatar img-fluid" />
                        </div>

                        <div class="col-lg-8 col-md-9">
                            <span class="ra-first-name">Jonathan</span>
                            <span class="ra-last-name">Dodsworth</span>
                            <div class="ra-position">Inside Sales Coordinator</div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        <div class="col-lg-8">
            @(Html.Kendo().TabStrip()
                .Name("tabstrip")
                .Items(tabstrip =>
                    {
                        tabstrip.Add().Text("<span class='km-icon revenue-icon'></span><span class='hidden-xs'>Revenue</span>")
                                .Encoded(false)
                                .Selected(true)
                                .Content(@<text>
                                        @(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.RevenueViewModel>()
                                            .Name("revenue")
                                            .DataSource(ds => ds.Read(read => read.Action("Revenue", "Home")))
                                            .Transitions(false)
                                            .Theme("sass")
                                            .ChartArea(chart => chart.Margin(m => m.Top(15))
                                            .Background("transparent"))
                                            .Legend(l => l.Visible(false))
                                            .SeriesDefaults(s=>s
                                                .Column()
                                                .Stack(true))
                                            .CategoryAxis(a=>a
                                                .Line(l=>l.Visible(false))
                                                .MajorGridLines(m=>m.Visible(false))
                                                .Labels(l=>l.Visible(false))
                                                .Categories(m=>m.Date))
                                            .Series(series => {
                                               series.Column(model => model.Canterbury).Name("Canterbury");
                                               series.Column(model => model.Manchester).Name("Manchester");
                                               series.Column(model => model.Rochester).Name("Rochester");
                                            })
                                            .ValueAxis(v=>v
                                                .Numeric()
                                                .Labels(l=>l
                                                    .Step(2)
                                                    .Template("$#= value #")
                                                )
                                                .PlotBands(bands => bands
                                                    .Add().From(30000).To(50000).Color("#a7c9e6").Opacity(0.3)
                                                ))
                                           .Tooltip(t=>t.Visible(true).Template("#= series.name # <br /> #= category #: $#= value #"))
                                        )
                        </text>);
                        tabstrip.Add().Text("<span class='km-icon spd-icon'></span><span class='hidden-xs'>Sales / day</span>")
                                .Encoded(false)
                                .Content(@<text>
                                            @(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.SalesPerDayViewModel>()
                                            .Name("sales-per-day")
                                            .DataSource(ds => ds.Read(read => read.Action("SalesPerDay", "Home")))
                                            .Transitions(false)
                                            .Theme("sass")
                                            .ChartArea(chart => chart.Margin(m => m.Top(15))
                                            .Background("transparent"))
                                            .Legend(l => l.Visible(false))
                                            .SeriesDefaults(s => s.VerticalBullet().Target(t=>t.Color("#ff0000")))
                                            .CategoryAxis(a => a.Categories(m => m.Date)
                                                .Labels(l => l.Visible(false))
                                                .MajorGridLines(m => m.Visible(false)))
                                            .Series(s => s.VerticalBullet(m => m.Value, m => m.Target))
                                            .Tooltip(t => t.Visible(false))
                                            .ValueAxis(v => v.Date().Labels(l => l.Step(2)).PlotBands(bands =>
                                            {
                                                bands.Add().From(10000).To(20000).Color("#ff0000").Opacity(0.05);
                                            }))
                                            )
                        </text>);
                        tabstrip.Add().Text("<span class='km-icon spr-icon'></span><span class='hidden-xs'>Sales / region</span>")
                                .Encoded(false)
                                .Content(@<text>
                                            @(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.SalesPerRegionViewModel>()
                                            .Name("sales-per-region")
                                            .DataSource(ds => ds.Read(read => read.Action("SalesPerRegion", "Home")))
                                            .Transitions(false)
                                            .Theme("sass")
                                            .Legend(l=>l.Visible(false))
                                            .ChartArea(c=>c.Margin(m => m.Top(15))
                                            .Background("transparent"))
                                            .SeriesDefaults(s=>s
                                                .Area()
                                                .Line(l=>l.Style(ChartSeriesLineStyle.Smooth))
                                                .Stack(true))
                                            .CategoryAxis(a=>a
                                                .Categories(m=>m.Date)
                                                .Line(l=>l.Visible(false))
                                                .Labels(l=>l.Visible(false))
                                                .MajorGridLines(l=>l.Visible(false))
                                                )
                                           .Tooltip(t=>t.Visible(true).Shared(true).Template("#= series.name # <br /> #= category #: #= value #"))
                                           .Series(series => {
                                               series.Area(model => model.Canterbury).Name("Canterbury");
                                               series.Area(model => model.Manchester).Name("Manchester");
                                               series.Area(model => model.Rochester).Name("Rochester");
                                            })
                                            .ValueAxis(v=>v.Numeric().Labels(l=>l.Step(2)))
                                        )
                        </text>);
                        tabstrip.Add().Text("<span class='km-icon share-icon'></span><span class='hidden-xs'>Market share</span>")
                                .Encoded(false)
                                .Content(@<text>
                                            @(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.DonutChartViewModel>()
                                                .HtmlAttributes(new { @class = "market-donut"})
                                                .Name("market-alice-mutton")
                                                .DataSource(ds => ds.Read(read => read.Action("AliceMutton", "Home")).Group(g => g.Add(d=> d.Series)))
                                                .Transitions(false)
                                                .Theme("sass")
                                                .Title(t => t
                                                    .Text("Alice Mutton")
                                                    .Position(ChartTitlePosition.Bottom)
                                                    .Padding(4)
                                                    .Margin(0))
                                                .Legend(l => l.Visible(false))
                                                .ChartArea(c => c
                                                    .Margin(m => m.Top(15))
                                                    .Background("transparent"))
                                                .Series(series => {
                                                    series.Donut(d => d.Value, d => d.Category);
                                                })
                                                .Tooltip(t=>t
                                                    .Visible(true)
                                                    .Template("#= category # (#= series.name #): #= value #%"))
                                            )

                                            @(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.DonutChartViewModel>()
                                                .HtmlAttributes(new { @class = "market-donut"})
                                                .Name("market-gravad")
                                                .DataSource(ds => ds.Read(read => read.Action("Gravad", "Home")).Group(g => g.Add(d=> d.Series)))
                                                .Transitions(false)
                                                .Theme("sass")
                                                .Title(t => t
                                                    .Text("Gravad lax")
                                                    .Position(ChartTitlePosition.Bottom)
                                                    .Padding(4)
                                                    .Margin(0))
                                                .Legend(l => l.Visible(false))
                                                .ChartArea(c => c
                                                    .Margin(m => m.Top(15))
                                                    .Background("transparent"))
                                                .Series(series => {
                                                    series.Donut(d => d.Value, d => d.Category);
                                                })
                                                .Tooltip(t=>t
                                                    .Visible(true)
                                                    .Template("#= category # (#= series.name #): #= value #%"))
                                            )

                                            @(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.DonutChartViewModel>()
                                                .HtmlAttributes(new { @class = "market-donut"})
                                                .Name("market-inlagd")
                                                .DataSource(ds => ds.Read(read => read.Action("Inlagd", "Home")).Group(g => g.Add(d=> d.Series)))
                                                .Transitions(false)
                                                .Theme("sass")
                                                .Title(t => t
                                                    .Text("Inlagd Sill")
                                                    .Position(ChartTitlePosition.Bottom)
                                                    .Padding(4)
                                                    .Margin(0))
                                                .Legend(l => l.Visible(false))
                                                .ChartArea(c => c
                            .Margin(m => m.Top(15))
                                                    .Background("transparent"))
                                                .Series(series => {
                                                    series.Donut(d => d.Value, d => d.Category);
                                                })
                                                .Tooltip(t=>t
                                                    .Visible(true)
                                                    .Template("#= category # (#= series.name #): #= value #%"))
                                            )

                                       @(Html.Kendo().Chart<Kendo_UI_Bootstrap_Integration.Models.DonutChartViewModel>()
                                                .HtmlAttributes(new { @class = "market-donut"})
                                                .Name("market-spageslid")
                                                .DataSource(ds => ds.Read(read => read.Action("Spegesild", "Home")).Group(g => g.Add(d=> d.Series)))
                                                .Transitions(false)
                                                .Theme("sass")
                                                .Title(t => t
                                                    .Text("Spageslid")
                                                    .Position(ChartTitlePosition.Bottom)
                                                    .Padding(4)
                                                    .Margin(0))
                                                .Legend(l => l.Visible(false))
                                                .ChartArea(c => c
                                                    .Margin(m => m.Top(15))
                                                    .Background("transparent"))
                                                .Series(series => {
                                                    series.Donut(d => d.Value, d => d.Category);
                                                })
                                                .Tooltip(t=>t
                                                    .Visible(true)
                                                    .Template("#= category # (#= series.name #): #= value #%"))
                                            )
                        </text>);
                    }
                )
            )
        </div>
    </div>

    <section class="card">
        <div class="card-header">Profile Setup</div>

        <div class="card-body row">
            <div class="form-widgets col-md-6">
                <div class="row mb-3">
                    <label class="col-sm-12 col-md-4 form-label text-md-end" for="name">Name</label>
                    <div class="col-sm-12 col-md-8 col-lg-6">
                        @(Html.Kendo().TextBox()
                             .Name("name")
                             .Placeholder("Name")
                             .Value("Johnatan Dodsworth")
                         )
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-12 col-md-4 form-label text-md-end" for="birthday">Birthday</label>
                    <div class="col-sm-12 col-md-8 col-lg-6">
                        @(Html.Kendo().DatePicker().Name("date").Value("10/09/1979"))
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-12 col-md-4 form-label text-md-end" for="gender">Gender</label>
                    <div class="col-sm-12 col-md-8 col-lg-6">
                        @(Html.Kendo().DropDownList()
                               .Name("gender")
                               .DataTextField("Text")
                               .DataValueField("Value")
                               .Value("Male")
                               .BindTo(new List<SelectListItem>() {
                                     new SelectListItem() {
                                         Text = "Male",
                                         Value = "Male"
                                     },
                                     new SelectListItem() {
                                         Text = "Female",
                                         Value = "Female"
                                     }
                               })
                            )
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-12 col-md-4 form-label text-md-end" for="language">Language</label>
                    <div class="col-sm-12 col-md-8 col-lg-6">
                        @(Html.Kendo().DropDownList()
                               .Name("language")
                               .DataTextField("Text")
                               .DataValueField("Value")
                               .Value("English")
                               .BindTo(new List<SelectListItem>() {
                                     new SelectListItem() {
                                         Text = "English",
                                         Value = "English"
                                     },
                                     new SelectListItem() {
                                         Text = "German",
                                         Value = "German"
                                     }
                                 })
                            )
                    </div>
                </div>
            </div>

            <div class="form-widgets col-md-6">
                <div class="row mb-3">
                    <label class="col-sm-12 col-md-4 form-label text-md-end" for="occupation">Occupation</label>
                    <div class="col-sm-12 col-md-8 col-lg-6">
                        @(Html.Kendo().TextBox()
                          .Name("occupation")
                          .Placeholder("Occupation")
                          .Value("e.g. Developer")
                        )
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-12 col-md-4 form-label text-md-end" for="skills">Skills</label>
                    <div class="col-sm-12 col-md-8 col-lg-6">
                        @(Html.Kendo().MultiSelect()
                             .Name("skills")
                             .DataTextField("Text")
                             .DataValueField("Value")
                             .Value(new string[] { "C#", "jQuery" })
                             .BindTo(new List<SelectListItem>() {
                                   new SelectListItem() {
                                       Text = "C",
                                       Value = "C"
                                   },
                                   new SelectListItem() {
                                       Text = "C++",
                                       Value = "C++"
                                   },
                                   new SelectListItem() {
                                       Text = "C#",
                                       Value = "C#"
                                   },
                                   new SelectListItem() {
                                       Text = "JavaScript",
                                       Value = "JavaScript"
                                   },
                                   new SelectListItem() {
                                       Text = "jQuery",
                                       Value = "jQuery"
                                   },
                                   new SelectListItem() {
                                       Text = "Git",
                                       Value = "Git"
                                   },
                                   new SelectListItem() {
                                       Text = "Node.js",
                                       Value = "Node.js"
                                   },
                                   new SelectListItem() {
                                       Text = "Ruby",
                                       Value = "Ruby"
                                   },
                                   new SelectListItem() {
                                       Text = "Ruby on Rails",
                                       Value = "Ruby on Rails"
                                   },
                                   new SelectListItem() {
                                       Text = "Kendo UI",
                                       Value = "Kendo UI"
                                   }
                               })
                        )
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-4 col-form-label col-form-label-md text-md-end" for="experience">Experience</label>
                    <div class="col-sm-12 col-md-8 col-lg-6">
                        @(Html.Kendo().NumericTextBox()
              .Name("experience")
              .Value(4))
                    </div>
                </div>
            </div>

            <div class="clearfix"></div>

            <div class="form-widgets col-sm-12">
                <div class="row mb-3">
                    <label class="col-sm-12 col-md-2 text-md-end" for="bio">Short bio</label>
                    <div class="col-sm-12 col-md-10 col-lg-9">
                        @(Html.Kendo().Editor().Name("bio"))
                    </div>
                </div>
            </div>

            <div class="buttons-wrap">
                <button class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-base">Cancel</button>
                <button class="k-button k-button-md k-rounded-md k-button-solid k-button-solid-base">Update</button>
            </div>
        </div>
    </section>

    @(Html.Kendo().Grid<Kendo_UI_Bootstrap_Integration.Orders.OrderViewModel>()
                    .Name("orders")
                    .HtmlAttributes(new { @class = "ra-section" })
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.OrderID).Width(70);
                        columns.Bound(p => p.ShipCountry).Title("Ship Country").Width("20%");
                        columns.Bound(p => p.ShipAddress).Title("Ship Address");
                    })
                    .Pageable(p => p.ButtonCount(4))
                    .Groupable(g => g.Enabled(true))
                    .Sortable(s => s.Enabled(true))
                    .Scrollable(s => s.Enabled(false))
                    .DataSource(dataSource => dataSource
                            .Custom()
                            .Type("odata")
                            .PageSize(10)
                            .ServerPaging(true)
                            .ServerSorting(true)
                            .ServerFiltering(true)
                            .Transport(t => t.Read(r => r.Url("https://demos.telerik.com/kendo-ui/service/Northwind.svc/Orders")))
                    )

        )

    @(Html.Kendo().Scheduler<Kendo_UI_Bootstrap_Integration.Scheduler.TaskViewModel>()
              .Name("schedule")
              .Date(new DateTime(2022, 6, 13))
              .StartTime(new DateTime(2022, 6, 13, 7, 00, 00))
              .EndTime(new DateTime(2022, 6, 13, 20, 00, 00))
              .HtmlAttributes(new { @class = "ra-section" })
              .Views(views =>
              {
                  views.DayView(dayView => dayView.Selected(true));
                  views.WeekView();
                  views.MonthView();
              })
              .Editable(false)
              .Timezone("Etc/UTC")
              .DataSource(dataSource => dataSource
                  .Custom()
                  .Transport(t => t
                      .Read(r => r
                          .Url("https://demos.telerik.com/kendo-ui/service/meetings")
                          .DataType("jsonp"))
                  )
                  .Schema(schema => schema
                      .Model(m =>
                      {
                          m.Id(f => f.TaskID);
                          m.Field("title", typeof(string)).DefaultValue("No title").From("Title");
                          m.Field("start", typeof(DateTime)).From("Start");
                          m.Field("end", typeof(DateTime)).From("End");
                          m.Field("description", typeof(string)).From("Description");
                          m.Field("recurrenceID", typeof(int)).From("RecurrenceID");
                          m.Field("recurrenceRule", typeof(string)).From("RecurrenceRule");
                          m.Field("recurrenceException", typeof(string)).From("RecurrenceException");
                          m.Field("isAllDay", typeof(bool)).From("IsAllDay");
                          m.Field("startTimezone", typeof(string)).From("StartTimezone");
                          m.Field("endTimezone", typeof(string)).From("EndTimezone");
                      })
                      )
              )
         )

    <section id="gallery" class="card">
        <div class="card-header" style="font-size: 14px;">Latest photo uploads</div>

        <script type="text/x-kendo-tmpl" id="listview-template">
                    <li class="col-xs-6 col-md-4 col-lg-2 k-listview-item">
                        <figure>
                            <img src='@Url.Content("~/assets/photos/#=data.Id #.jpg")' class="img-fluid" />
                            <figcaption class="d-none d-sm-block">
                                <h4 style="font-size: 14px;">#: Title #</h4>
                                <p class="d-sm-none d-md-block" style="font-size: 14px;">
                                    #: Description #
                                </p>
                            </figcaption>
                        </figure>
                    </li>
        </script>

        @(Html.Kendo().ListView<Kendo_UI_Bootstrap_Integration.ListViewModel>()
            .Name("listview")
            .ClientTemplateId("listview-template")
            .ClientTemplateHandler("template")
            .TagName("div")
            .BindTo(new List<Kendo_UI_Bootstrap_Integration.ListViewModel>() {
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 1,
                                  Title = "Sunrise",
                                  Description = "And what a great July morning it was..."
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 2,
                                  Title = "Fisherman",
                                  Description = "Fishing on the north shore"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 3,
                                  Title = "Green Forest",
                                  Description = "Summer is everywhere"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 4,
                                  Title = "Cactus",
                                  Description = "A yellow one..."
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 5,
                                  Title = "Moss",
                                  Description = "Nice mossy green"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 6,
                                  Title = "Red Boat",
                                  Description = "In the middle of nowhere"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 7,
                                  Title = "Country Road",
                                  Description = "On my way home"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 8,
                                  Title = "Bloom",
                                  Description = "Cherry blossoms in full bloom"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 9,
                                  Title = "San Francisco",
                                  Description = "San Francisco by sunset"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 10,
                                  Title = "Peaks",
                                  Description = "Was a great holiday"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 11,
                                  Title = "Thunderstorm",
                                  Description = "Midnight storm on its way"
                              },
                              new Kendo_UI_Bootstrap_Integration.ListViewModel() {
                                  Id = 12,
                                  Title = "Leafs",
                                  Description = "Autumn leafs on the patio"
                              }
                          })
        )
    </section>

    <section id="faq" class="well">
        <div class="card-header" style="font-size: 14px;">
            <abbr title="Frequently Asked Questions">FAQ</abbr>
        </div>

        <div class="card-body">
        @(Html.Kendo().PanelBar()
            .Name("panelbar")
            .HtmlAttributes(new { @class = "ra-well-overlay" })
            .Items(panelbar =>
                    {
                        panelbar.Add().Text("What is Telerik UI for ASP.NET Core")
                                .Selected(true)
                                .Content(@<text>
                                <div>
                                    <p>Telerik UI for ASP.NET Core is a set of server-side wrappers that bring the HTML/JavaScript Kendo UI widgets to .NET Core. Our server-side wrappers come in the form of HTML and Tag helpers. From client-side perspective, the vanilla HTML/JavaScript Kendo UI widgets and their ASP.NET Core server-side wrappers represent the same functionalities and provide the same capabilities.</p>
                                    <p><a href="https://www.telerik.com/try/aspnet-core-ui">Download Kendo UI</a> and experience the difference today</p>
                                </div></text>);
                        panelbar.Add().Text("Who should use UI for ASP.NET Core?")
                                            .Encoded(false)
                                            .Content(@<text>
                                <div>
                                    <p>Telerik UI for ASP.NET Core is a set of server-side wrappers that bring the HTML/JavaScript Kendo UI widgets to .NET Core. Our server-side wrappers come in the form of HTML and Tag helpers. From client-side perspective, the vanilla HTML/JavaScript Kendo UI widgets and their ASP.NET Core server-side wrappers represent the same functionalities and provide the same capabilities.</p>
                                    <p><a href="https://www.telerik.com/try/aspnet-core-ui">Download Kendo UI</a> and experience the difference today</p>
                                </div></text>);
                        panelbar.Add().Text("What are Telerik UI for ASP.NET Core components?")
                                            .Encoded(false)
                                            .Content(@<text>
                                <div>
                                    <p>The Telerik UI for ASP.NET Core HTML and Tag helpers:</p>
                                    <ul>
                                        <li>Allow you to configure a Kendo UI widget through C# or VB.NET code—for example, to set its value, data source, and so on</li>
                                        <li>Render the HTML and JavaScript that are needed to initialize a Kendo UI widget</li>
                                        <li>Propagate the widget’s options to the client-side through its initialization script</li>
                                    </ul>
                                </div></text>);
                    }
                )
        )
        </div>
    </section>
    <footer>Copyright © @DateTime.Now.Year Progress Software Corporation and/or its subsidiaries or affiliates. All Rights Reserved.</footer>
</div>

<script>
    $(document).ready(function () {
        kendo.ui.icon($(".revenue-icon"), { icon: 'dollar' });
        kendo.ui.icon($(".spd-icon"), { icon: 'chart-column-clustered' });
        kendo.ui.icon($(".spr-icon"), { icon: 'graph' });
        kendo.ui.icon($(".share-icon"), { icon: 'chart-doughnut' });

    });
</script>
